{"ast":null,"code":"export const SET_WORD = \"SETWORD\";\nexport const SET_CHAR = \"SETCHAR\";\nexport const TIMER_DECREMENT = \"TIMERDECREMENT\";\nexport const APPEND_TYPED_HISTORY = \"APPENDTYPEDHISTORY\";\nexport const TIMER_SET = \"TIMERSET\";\nexport const TIMERID_SET = \"TIMERIDSET\";\nexport const PREV_WORD = \"PREVWORD\";\nexport const SET_WORDLIST = \"SETWORDLIST\";\nexport const SET_THEME = \"SETTHEME\";\nexport const SET_TIME = \"SETTIME\";\nexport const SET_REF = \"SETREF\";\nexport const SET_CARET_REF = \"SETCARETREF\";\nexport const SET_TYPE = \"SETTYPE\";\n\n// Time Actions\nexport const timerDecrement = () => ({\n  type: TIMER_DECREMENT\n});\nexport const timerSet = payload => ({\n  type: TIMER_SET,\n  payload\n});\nexport const setTimerId = payload => ({\n  type: TIMERID_SET,\n  payload\n});\n\n// Word Actions\nexport const setWord = payload => ({\n  type: SET_WORD,\n  payload\n});\nexport const setChar = payload => ({\n  type: SET_CHAR,\n  payload\n});\nexport const setTypedWord = payload => ({\n  type: SET_CHAR,\n  payload\n});\nexport const appendTypedHistory = () => ({\n  type: APPEND_TYPED_HISTORY\n});\nexport const backtrackWord = payload => ({\n  type: PREV_WORD,\n  payload\n});\nexport const setWordList = payload => ({\n  type: SET_WORDLIST,\n  payload\n});\nexport const setRef = payload => ({\n  type: SET_REF,\n  payload\n});\nexport const setCaretRef = payload => ({\n  type: SET_CARET_REF,\n  payload\n});\n\n// Prefrences Actions\nexport const setTheme = payload => ({\n  type: SET_THEME,\n  payload\n});\nexport const setTime = payload => ({\n  type: SET_TIME,\n  payload\n});\nexport const setType = payload => ({\n  type: SET_TYPE,\n  payload\n});","map":{"version":3,"names":["SET_WORD","SET_CHAR","TIMER_DECREMENT","APPEND_TYPED_HISTORY","TIMER_SET","TIMERID_SET","PREV_WORD","SET_WORDLIST","SET_THEME","SET_TIME","SET_REF","SET_CARET_REF","SET_TYPE","timerDecrement","type","timerSet","payload","setTimerId","setWord","setChar","setTypedWord","appendTypedHistory","backtrackWord","setWordList","setRef","setCaretRef","setTheme","setTime","setType"],"sources":["D:/Belajar/typing-test/src/store/actions.ts"],"sourcesContent":["import { RefObject } from \"react\";\r\n\r\nexport const SET_WORD = \"SETWORD\";\r\nexport const SET_CHAR = \"SETCHAR\";\r\nexport const TIMER_DECREMENT = \"TIMERDECREMENT\";\r\nexport const APPEND_TYPED_HISTORY = \"APPENDTYPEDHISTORY\";\r\nexport const TIMER_SET = \"TIMERSET\";\r\nexport const TIMERID_SET = \"TIMERIDSET\";\r\nexport const PREV_WORD = \"PREVWORD\";\r\nexport const SET_WORDLIST = \"SETWORDLIST\";\r\nexport const SET_THEME = \"SETTHEME\";\r\nexport const SET_TIME = \"SETTIME\";\r\nexport const SET_REF = \"SETREF\";\r\nexport const SET_CARET_REF = \"SETCARETREF\";\r\nexport const SET_TYPE = \"SETTYPE\";\r\n\r\n// Time Actions\r\nexport const timerDecrement = () => ({ type: TIMER_DECREMENT });\r\nexport const timerSet = (payload: number) => ({ type: TIMER_SET, payload });\r\nexport const setTimerId = (payload: NodeJS.Timer | null) => ({\r\n    type: TIMERID_SET,\r\n    payload,\r\n});\r\n\r\n// Word Actions\r\nexport const setWord = (payload: string) => ({ type: SET_WORD, payload });\r\nexport const setChar = (payload: string) => ({ type: SET_CHAR, payload });\r\nexport const setTypedWord = (payload: string) => ({ type: SET_CHAR, payload });\r\nexport const appendTypedHistory = () => ({\r\n    type: APPEND_TYPED_HISTORY,\r\n});\r\nexport const backtrackWord = (payload: boolean) => ({\r\n    type: PREV_WORD,\r\n    payload,\r\n});\r\nexport const setWordList = (payload: string[]) => ({\r\n    type: SET_WORDLIST,\r\n    payload,\r\n});\r\nexport const setRef = (payload: RefObject<HTMLDivElement>) => ({\r\n    type: SET_REF,\r\n    payload,\r\n});\r\nexport const setCaretRef = (payload: RefObject<HTMLSpanElement>) => ({\r\n    type: SET_CARET_REF,\r\n    payload,\r\n});\r\n\r\n// Prefrences Actions\r\nexport const setTheme = (payload: string) => ({ type: SET_THEME, payload });\r\nexport const setTime = (payload: number) => ({ type: SET_TIME, payload });\r\nexport const setType = (payload: string) => ({\r\n    type: SET_TYPE,\r\n    payload,\r\n});\r\n"],"mappings":"AAEA,OAAO,MAAMA,QAAQ,GAAG,SAAS;AACjC,OAAO,MAAMC,QAAQ,GAAG,SAAS;AACjC,OAAO,MAAMC,eAAe,GAAG,gBAAgB;AAC/C,OAAO,MAAMC,oBAAoB,GAAG,oBAAoB;AACxD,OAAO,MAAMC,SAAS,GAAG,UAAU;AACnC,OAAO,MAAMC,WAAW,GAAG,YAAY;AACvC,OAAO,MAAMC,SAAS,GAAG,UAAU;AACnC,OAAO,MAAMC,YAAY,GAAG,aAAa;AACzC,OAAO,MAAMC,SAAS,GAAG,UAAU;AACnC,OAAO,MAAMC,QAAQ,GAAG,SAAS;AACjC,OAAO,MAAMC,OAAO,GAAG,QAAQ;AAC/B,OAAO,MAAMC,aAAa,GAAG,aAAa;AAC1C,OAAO,MAAMC,QAAQ,GAAG,SAAS;;AAEjC;AACA,OAAO,MAAMC,cAAc,GAAG,OAAO;EAAEC,IAAI,EAAEZ;AAAgB,CAAC,CAAC;AAC/D,OAAO,MAAMa,QAAQ,GAAIC,OAAe,KAAM;EAAEF,IAAI,EAAEV,SAAS;EAAEY;AAAQ,CAAC,CAAC;AAC3E,OAAO,MAAMC,UAAU,GAAID,OAA4B,KAAM;EACzDF,IAAI,EAAET,WAAW;EACjBW;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,OAAO,GAAIF,OAAe,KAAM;EAAEF,IAAI,EAAEd,QAAQ;EAAEgB;AAAQ,CAAC,CAAC;AACzE,OAAO,MAAMG,OAAO,GAAIH,OAAe,KAAM;EAAEF,IAAI,EAAEb,QAAQ;EAAEe;AAAQ,CAAC,CAAC;AACzE,OAAO,MAAMI,YAAY,GAAIJ,OAAe,KAAM;EAAEF,IAAI,EAAEb,QAAQ;EAAEe;AAAQ,CAAC,CAAC;AAC9E,OAAO,MAAMK,kBAAkB,GAAG,OAAO;EACrCP,IAAI,EAAEX;AACV,CAAC,CAAC;AACF,OAAO,MAAMmB,aAAa,GAAIN,OAAgB,KAAM;EAChDF,IAAI,EAAER,SAAS;EACfU;AACJ,CAAC,CAAC;AACF,OAAO,MAAMO,WAAW,GAAIP,OAAiB,KAAM;EAC/CF,IAAI,EAAEP,YAAY;EAClBS;AACJ,CAAC,CAAC;AACF,OAAO,MAAMQ,MAAM,GAAIR,OAAkC,KAAM;EAC3DF,IAAI,EAAEJ,OAAO;EACbM;AACJ,CAAC,CAAC;AACF,OAAO,MAAMS,WAAW,GAAIT,OAAmC,KAAM;EACjEF,IAAI,EAAEH,aAAa;EACnBK;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMU,QAAQ,GAAIV,OAAe,KAAM;EAAEF,IAAI,EAAEN,SAAS;EAAEQ;AAAQ,CAAC,CAAC;AAC3E,OAAO,MAAMW,OAAO,GAAIX,OAAe,KAAM;EAAEF,IAAI,EAAEL,QAAQ;EAAEO;AAAQ,CAAC,CAAC;AACzE,OAAO,MAAMY,OAAO,GAAIZ,OAAe,KAAM;EACzCF,IAAI,EAAEF,QAAQ;EACdI;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}