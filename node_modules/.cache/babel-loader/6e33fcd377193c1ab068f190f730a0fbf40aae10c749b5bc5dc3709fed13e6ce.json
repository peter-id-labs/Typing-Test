{"ast":null,"code":"import _regeneratorRuntime from\"D:/Belajar/typing-test/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Belajar/typing-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{setTimerId,setWordList,timerSet}from\"store/actions\";import{store}from\"store/store\";export var resetTest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var dispatch,getState,_getState,timerId,_getState$preferences,timeLimit,type;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch=store.dispatch,getState=store.getState;_getState=getState(),timerId=_getState.time.timerId,_getState$preferences=_getState.preferences,timeLimit=_getState$preferences.timeLimit,type=_getState$preferences.type;document.querySelectorAll(\".wrong, .right\").forEach(function(el){return el.classList.remove(\"wrong\",\"right\");});if(timerId){clearInterval(timerId);dispatch(setTimerId(null));}import(\"wordlists/\".concat(type,\".json\")).then(function(words){return dispatch(setWordList(words.default));});dispatch(timerSet(timeLimit));case 6:case\"end\":return _context.stop();}}},_callee);}));return function resetTest(){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["setTimerId","setWordList","timerSet","store","resetTest","dispatch","getState","timerId","time","preferences","timeLimit","type","document","querySelectorAll","forEach","el","classList","remove","clearInterval","then","words","default"],"sources":["D:/Belajar/typing-test/src/helpers/resetTest.ts"],"sourcesContent":["import { setTimerId, setWordList, timerSet } from \"store/actions\";\r\nimport { store } from \"store/store\";\r\n\r\nexport const resetTest = async () => {\r\n    const { dispatch, getState } = store;\r\n    const {\r\n        time: { timerId },\r\n        preferences: { timeLimit, type },\r\n    } = getState();\r\n    document\r\n        .querySelectorAll(\".wrong, .right\")\r\n        .forEach((el) => el.classList.remove(\"wrong\", \"right\"));\r\n    if (timerId) {\r\n        clearInterval(timerId);\r\n        dispatch(setTimerId(null));\r\n    }\r\n    import(`wordlists/${type}.json`).then((words) =>\r\n        dispatch(setWordList(words.default))\r\n    );\r\n    dispatch(timerSet(timeLimit));\r\n};\r\n"],"mappings":"wOAAA,OAASA,UAAU,CAAEC,WAAW,CAAEC,QAAQ,KAAQ,eAAe,CACjE,OAASC,KAAK,KAAQ,aAAa,CAEnC,MAAO,IAAMC,UAAS,4FAAG,kNACbC,QAAQ,CAAeF,KAAK,CAA5BE,QAAQ,CAAEC,QAAQ,CAAKH,KAAK,CAAlBG,QAAQ,WAItBA,QAAQ,EAAE,CAFFC,OAAO,WAAfC,IAAI,CAAID,OAAO,iCACfE,WAAW,CAAIC,SAAS,uBAATA,SAAS,CAAEC,IAAI,uBAAJA,IAAI,CAElCC,QAAQ,CACHC,gBAAgB,CAAC,gBAAgB,CAAC,CAClCC,OAAO,CAAC,SAACC,EAAE,QAAKA,GAAE,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,CAAE,OAAO,CAAC,GAAC,CAC3D,GAAIV,OAAO,CAAE,CACTW,aAAa,CAACX,OAAO,CAAC,CACtBF,QAAQ,CAACL,UAAU,CAAC,IAAI,CAAC,CAAC,CAC9B,CACA,MAAM,qBAAcW,IAAI,UAAQ,CAACQ,IAAI,CAAC,SAACC,KAAK,QACxCf,SAAQ,CAACJ,WAAW,CAACmB,KAAK,CAACC,OAAO,CAAC,CAAC,GACvC,CACDhB,QAAQ,CAACH,QAAQ,CAACQ,SAAS,CAAC,CAAC,CAAC,sDACjC,kBAjBYN,UAAS,0CAiBrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}