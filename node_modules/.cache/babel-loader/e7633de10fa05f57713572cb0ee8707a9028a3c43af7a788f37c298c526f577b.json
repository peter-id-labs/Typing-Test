{"ast":null,"code":"import{appendTypedHistory,backtrackWord,setChar,setTypedWord}from\"store/actions\";import{store}from\"store/store\";import{resetTest}from\"./resetTest\";import{startTimer}from\"./startTimer\";var handleBackspace=function handleBackspace(ctrlKey){var dispatch=store.dispatch,getState=store.getState;var _getState=getState(),_getState$word=_getState.word,typedWord=_getState$word.typedWord,activeWordRef=_getState$word.activeWordRef,typedHistory=_getState$word.typedHistory,wordList=_getState$word.wordList;var currIdx=typedHistory.length-1;var currWordEl=activeWordRef===null||activeWordRef===void 0?void 0:activeWordRef.current;if(!typedWord&&typedHistory[currIdx]!==wordList[currIdx]){dispatch(backtrackWord(ctrlKey));currWordEl.previousElementSibling.classList.remove(\"right\",\"wrong\");if(ctrlKey){currWordEl.previousElementSibling.childNodes.forEach(function(char){char.classList.remove(\"wrong\",\"right\");});}}else{if(ctrlKey){dispatch(setTypedWord(\"\"));currWordEl.childNodes.forEach(function(char){char.classList.remove(\"wrong\",\"right\");});}else{var newTypedWord=typedWord.slice(0,typedWord.length-1);dispatch(setTypedWord(newTypedWord));}}};export var recordTest=function recordTest(key,ctrlKey){var dispatch=store.dispatch,getState=store.getState;var _getState2=getState(),_getState2$time=_getState2.time,timer=_getState2$time.timer,timerId=_getState2$time.timerId,_getState2$word=_getState2.word,typedWord=_getState2$word.typedWord,currWord=_getState2$word.currWord,activeWordRef=_getState2$word.activeWordRef,caretRef=_getState2$word.caretRef,timeLimit=_getState2.preferences.timeLimit;if(!timer){if(key===\"Tab\"){resetTest();}return;}if(!timerId&&key!==\"Tab\")startTimer();var currWordEl=activeWordRef===null||activeWordRef===void 0?void 0:activeWordRef.current;currWordEl.scrollIntoView({behavior:\"smooth\",block:\"center\"});var caret=caretRef===null||caretRef===void 0?void 0:caretRef.current;caret.classList.remove(\"blink\");setTimeout(function(){return caret.classList.add(\"blink\");},500);switch(key){case\"Tab\":if(timer!==timeLimit||timerId){resetTest();document.getElementsByClassName(\"word\")[0].scrollIntoView();}break;case\" \":if(typedWord===\"\")return;currWordEl.classList.add(typedWord!==currWord?\"wrong\":\"right\");dispatch(appendTypedHistory());break;case\"Backspace\":handleBackspace(ctrlKey);break;default:dispatch(setChar(typedWord+key));break;}};","map":{"version":3,"names":["appendTypedHistory","backtrackWord","setChar","setTypedWord","store","resetTest","startTimer","handleBackspace","ctrlKey","dispatch","getState","word","typedWord","activeWordRef","typedHistory","wordList","currIdx","length","currWordEl","current","previousElementSibling","classList","remove","childNodes","forEach","char","newTypedWord","slice","recordTest","key","time","timer","timerId","currWord","caretRef","timeLimit","preferences","scrollIntoView","behavior","block","caret","setTimeout","add","document","getElementsByClassName"],"sources":["D:/Belajar/typing-test/src/helpers/recordTest.ts"],"sourcesContent":["import {\r\n    appendTypedHistory,\r\n    backtrackWord,\r\n    setChar,\r\n    setTypedWord,\r\n} from \"store/actions\";\r\nimport { store } from \"store/store\";\r\nimport { resetTest } from \"./resetTest\";\r\nimport { startTimer } from \"./startTimer\";\r\n\r\nconst handleBackspace = (ctrlKey: boolean) => {\r\n    const { dispatch, getState } = store;\r\n    const {\r\n        word: { typedWord, activeWordRef, typedHistory, wordList },\r\n    } = getState();\r\n    const currIdx = typedHistory.length - 1;\r\n    const currWordEl = activeWordRef?.current!;\r\n    if (!typedWord && typedHistory[currIdx] !== wordList[currIdx]) {\r\n        dispatch(backtrackWord(ctrlKey));\r\n        currWordEl.previousElementSibling!.classList.remove(\"right\", \"wrong\");\r\n        if (ctrlKey) {\r\n            currWordEl.previousElementSibling!.childNodes.forEach(\r\n                (char: HTMLSpanElement) => {\r\n                    char.classList.remove(\"wrong\", \"right\");\r\n                }\r\n            );\r\n        }\r\n    } else {\r\n        if (ctrlKey) {\r\n            dispatch(setTypedWord(\"\"));\r\n            currWordEl.childNodes.forEach((char: HTMLSpanElement) => {\r\n                char.classList.remove(\"wrong\", \"right\");\r\n            });\r\n        } else {\r\n            const newTypedWord = typedWord.slice(0, typedWord.length - 1);\r\n            dispatch(setTypedWord(newTypedWord));\r\n        }\r\n    }\r\n};\r\n\r\nexport const recordTest = (key: string, ctrlKey: boolean) => {\r\n    const { dispatch, getState } = store;\r\n    const {\r\n        time: { timer, timerId },\r\n        word: { typedWord, currWord, activeWordRef, caretRef },\r\n        preferences: { timeLimit },\r\n    } = getState();\r\n\r\n    if (!timer) {\r\n        if (key === \"Tab\") {\r\n            resetTest();\r\n        }\r\n        return;\r\n    }\r\n    if (!timerId && key !== \"Tab\") startTimer();\r\n    const currWordEl = activeWordRef?.current!;\r\n    currWordEl.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    const caret = caretRef?.current!;\r\n    caret.classList.remove(\"blink\");\r\n    setTimeout(() => caret.classList.add(\"blink\"), 500);\r\n    switch (key) {\r\n        case \"Tab\":\r\n            if (timer !== timeLimit || timerId) {\r\n                resetTest();\r\n                document.getElementsByClassName(\"word\")[0].scrollIntoView();\r\n            }\r\n            break;\r\n        case \" \":\r\n            if (typedWord === \"\") return;\r\n            currWordEl.classList.add(\r\n                typedWord !== currWord ? \"wrong\" : \"right\"\r\n            );\r\n            dispatch(appendTypedHistory());\r\n            break;\r\n        case \"Backspace\":\r\n            handleBackspace(ctrlKey);\r\n            break;\r\n        default:\r\n            dispatch(setChar(typedWord + key));\r\n            break;\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}